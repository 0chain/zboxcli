# Use the Windows Server 2022 base image for amd64
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set environment variables for Go
ENV GOLANG_VERSION 1.21
ARG VERSION

# Install Chocolatey
RUN powershell -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Install Go
RUN choco install golang --version %GOLANG_VERSION% -y && \
    refreshenv

# Create directories
RUN mkdir c:\\src

# Copy the source code into the container
COPY . c:\\src

# Set the working directory
WORKDIR c:\\src

# Build the application
RUN go env
RUN CGO_ENABLED=1 go build -x -v -tags bn256 -ldflags "-X main.VersionStr=${VERSION} -linkmode 'external' -extldflags '-static'" -o zbox.exe .

