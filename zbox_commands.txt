Usage: zbox

Short: zbox is a decentralized storage application written on the 0Chain platform
Long: zbox is a decentralized storage application written on the 0Chain platform.
			Complete documentation is available at https://docs.zus.network/guides/zbox-cli

LocalFlags:
-c, --config	config file (default is config.yaml)
-c, --configDir	configuration directory (default is $HOME/.zcn)
-f, --fee	transaction fee for the given transaction (if unset, it will be set to blockchain min fee)
-n, --network	network file to overwrite the network details (if required, default is network.yaml)
-s, --silent	(default false) Do not show interactive sdk logs (shown by default)
-w, --wallet	wallet file (default is wallet.json)
-w, --wallet_client_id	wallet client_id
-w, --wallet_client_key	wallet client_key
-w, --withNonce	nonce that will be used in transaction (default is 0)

Subcommands:
Usage: add

Short: Adds free storage assigner
Long: Adds free storage assigner

LocalFlags:
-k, --key	the public key used for singing markers
-l, --limit	maximum number of tokens to use in a free allocation
-m, --max	the total number of tokens that can be given in free allocations
-n, --name	the account number that will be creating free storage markers

Usage: alloc-cancel

Short: Cancel an allocation
Long: Cancel allocation used to terminate an allocation where, because
of blobbers, it can't be used. Thus, the blobbers will not receive their
min_lock_demand. Other aspects of the cancellation follows the finalize
allocation flow.

LocalFlags:
-a, --allocation	Allocation ID

Usage: alloc-fini

Short: Finalize an expired allocation
Long: Finalize an expired allocation by allocation owner or one of
blobbers of the allocation. It moves all tokens have to be moved between pools
and empties write pool moving left tokens to client.

LocalFlags:
-a, --allocation	Allocation ID

Usage: bl-info

Short: Get blobber info
Long: Get blobber info

LocalFlags:
-b, --blobber_id	blobber ID, required
-j, --json	(default false) pass this option to print response as json data

Usage: bl-update

Short: Update blobber settings by its delegate_wallet owner
Long: Update blobber settings by its delegate_wallet owner

LocalFlags:
-b, --blobber_id	blobber ID, required
-c, --capacity	update blobber capacity bid, optional
-i, --is_restricted	(default false) set is_restricted
-m, --max_offer_duration	update max_offer_duration, optional
-m, --max_stake	update max_stake, optional
-m, --min_stake	update min_stake, optional
-n, --not_available	(default false) set blobber's availability for new allocations
-n, --num_delegates	update num_delegates, optional
-r, --read_price	update read_price, optional
-s, --service_charge	update service_charge, optional
-u, --url	update the url of the blobber, optional
-w, --write_price	update write_price, optional

Usage: collect-reward

Short: Collect accrued rewards for a stake pool.
Long: Collect accrued rewards for a stake pool.

LocalFlags:
-p, --provider_id	blobber or validator id
-p, --provider_type	provider type

Usage: copy

Short: copy an object(file/folder) to another folder on blobbers
Long: copy an object to another folder on blobbers

LocalFlags:
-a, --allocation	Allocation ID
-d, --destpath	Destination path for the object. Existing directory the object should be copied to
-r, --remotepath	Remote path of object to copy

Usage: cp-info

Short: Challenge pool information.
Long: Challenge pool information.

LocalFlags:
-a, --allocation	allocation identifier, required
-j, --json	(default false) pass this option to print response as json data

Usage: createdir

Short: Create directory
Long: Create directory

LocalFlags:
-a, --allocation	Allocation ID
-d, --dirname	New directory name

Usage: decrypt

Short: Decrypt text with passphrase
Long: Decrypt text with passphrase

LocalFlags:
-p, --passphrase	Passphrase to decrypt text
-t, --text	Encrypted text

Usage: delete

Short: delete file from blobbers
Long: delete file from blobbers

LocalFlags:
-a, --allocation	Allocation ID
-r, --remotepath	Remote path of the object to delete

Usage: download

Short: download file from blobbers
Long: download file from blobbers

LocalFlags:
-a, --allocation	Allocation ID
-a, --authticket	Auth ticket fot the file to download if you dont own it
-b, --blockspermarker	pass this option to download multiple blocks per marker
-d, --delay	pass segment duration to generate media playlist(m3u8). only works with --live. default duration is 5s.
-e, --endblock	pass this option to download till specific block number
-l, --live	(default false) start m3u8 downloader,and automatically generate media playlist(m3u8) on --localpath
-l, --localpath	Local path of file to download
-l, --lookuphash	The remote lookuphash of the object retrieved from the list
-m, --multidownloadjson	A JSON file containing multi download options
-r, --remotepath	Remote path to download
-s, --startblock	Pass this option to download from specific block number. It should not be less than 1
-t, --thumbnail	(default false) pass this option to download only the thumbnail
-v, --verifydownload	(default false) pass this option to verify downloaded blocks

Usage: feed

Short: download segment files from remote live feed, and upload
Long: download segment files from remote live feed, and upload

LocalFlags:
-a, --allocation	Allocation ID
-a, --attr-who-pays-for-reads	Who pays for reads: owner or 3rd_party
-c, --chunknumber	how many chunks should be uploaded in a http request
-d, --delay	set segment duration to seconds.
-d, --downloader-args	pass args to youtube-dl to download video. default is "-q".
-e, --encrypt	(default false) pass this option to encrypt and upload the file
-f, --feed	set remote live feed to url.
-f, --ffmpeg-args	pass args to ffmpeg to build segments. default is "-loglevel warning".
-l, --localpath	Local path of file to upload
-r, --remotepath	Remote path to upload
-t, --thumbnailpath	Local thumbnail path of file to upload

Usage: get-diff

Short: Get difference of local and allocation root
Long: Get difference of local and allocation root

LocalFlags:
-a, --allocation	Allocation ID
-e, --excludepath	Remote folder paths exclude to sync
-l, --localcache	Local cache of remote snapshot.
If file exists, this will be used for comparison with remote.
After sync complete, remote snapshot will be updated to the same file for next use.
-l, --localpath	Local dir path to sync

Usage: get-download-cost

Short: Get downloading cost
Long: Get downloading cost

LocalFlags:
-a, --allocation	allocation ID, required
-a, --authticket	authticket
-b, --blocks-per-marker	blocks signed per Read Marker
-l, --lookuphash	lookuphash, for the remote file
-r, --remotepath	remote path of file

Usage: get-mpt

Short: Directly view blockchain data
Long: Directly view blockchain data from MPT key

LocalFlags:
-k, --key	Key into MPT datastore

Usage: get-upload-cost

Short: Get uploading cost
Long: Get uploading cost

LocalFlags:
-a, --allocation	allocation ID, required
-d, --duration	expected duration keep uploaded file
-e, --end	(default false) use the duration until allocation ends
-l, --localpath	local file path, required

Usage: getallocation

Short: Gets the allocation info
Long: Gets the allocation info

LocalFlags:
-a, --allocation	Allocation ID
-b, --blocks-per-marker	blocks signed per Read Marker
-j, --json	(default false) pass this option to print response as json data

Usage: getwallet

Short: Get wallet information
Long: Get wallet information

LocalFlags:
-j, --json	(default false) pass this option to print response as json data

Usage: kill-blobber

Short: punitively deactivate a blobber
Long: punitively deactivate a blobber

LocalFlags:
-i, --id	blobber's id

Usage: kill-validator

Short: punitively deactivate a validator
Long: punitively deactivate a validator

LocalFlags:
-i, --id	validator's id

Usage: list

Short: list files from blobbers
Long: list files from blobbers

LocalFlags:
-a, --allocation	Allocation ID
-a, --authticket	Auth ticket fot the file to download if you dont own it
-j, --json	(default false) pass this option to print response as json data
-l, --lookuphash	The remote lookuphash of the object retrieved from the list
-r, --remotepath	Remote path to list from

Usage: list-all

Short: list all files from blobbers
Long: list all files from blobbers

LocalFlags:
-a, --allocation	Allocation ID

Usage: listallocations

Short: List allocations for the client
Long: List allocations for the client

LocalFlags:
-j, --json	(default false) pass this option to print response as json data

Usage: ls-blobbers

Short: Show active blobbers in storage SC.
Long: Show active blobbers in storage SC.

LocalFlags:
-a, --all	(default false) shows active and non active list of blobbers on ls-blobbers
-j, --json	(default false) pass this option to print response as json data
-s, --stakable	(default false) gets only stakable list of blobbers if set to true

Usage: ls-validators

Short: Show active Validators.
Long: Show active Validators in the network.

LocalFlags:
-j, --json	(default false) pass this flag to get response as json object
-s, --stakable	(default false) Gets only validators that can be staked if set to true

Usage: meta

Short: get meta data of files from blobbers
Long: get meta data of files from blobbers

LocalFlags:
-a, --allocation	Allocation ID
-a, --authticket	Auth ticket fot the file to download if you dont own it
-j, --json	(default false) pass this option to print response as json data
-l, --lookuphash	The remote lookuphash of the object retrieved from the list
-r, --remotepath	Remote path to list from

Usage: move

Short: move an object(file/folder) to another folder on blobbers
Long: move an object to another folder on blobbers

LocalFlags:
-a, --allocation	Allocation ID
-d, --destpath	Destination path for the object. Existing directory the object should be copied to
-r, --remotepath	Remote path of object to move

Usage: newallocation

Short: Creates a new allocation
Long: Creates a new allocation

LocalFlags:
-a, --allocationFileName	name of the file in configDir to store the generated allocationID
-b, --blobber_auth_tickets	coma seperated list of blobber auth tickets
-c, --cost	pass this option to only get the min lock demand
-d, --data	the number of blobbers to be used as data shards
-f, --forbid_copy	(default false) specify if the users cannot copy object from this allocation
-f, --forbid_delete	(default false) specify if the users cannot delete objects from this allocation
-f, --forbid_move	(default false) specify if the users cannot move objects from this allocation
-f, --forbid_rename	(default false) specify if the users cannot rename objects in this allocation
-f, --forbid_update	(default false) specify if the users cannot update objects in this allocation
-f, --forbid_upload	(default false) specify if users cannot upload to this allocation
-f, --force	(default false) force to get blobbers even if required number of blobbers are not available (should be passed true in case of restricted blobbers)
-f, --free_storage	json file containing marker for free storage
-l, --lock	lock write pool with given number of tokens, required
-n, --name	allocation name
-o, --owner	create an allocation with someone else as owner
-o, --owner_public_key	public key of owner, user when creating an allocation for somone else
-p, --parity	the number of blobber to be used as parity shards
-p, --preferred_blobbers	coma seperated list of preferred blobbers
-r, --read_price	select blobbers by provided read price range, use form 0.5-1.5, default is [0; inf)
-s, --size	the size of the allocation
-t, --third_party_extendable	(default false) specify if the allocation can be extended by users other than the owner
-u, --usd	pass this option to give token value in USD
-w, --write_price	select blobbers by provided write price range, use form 1.5-2.5, default is [0; inf)

Usage: recent-refs

Short: get list of recently added refs
Long: get list of recently added refs

LocalFlags:
-a, --allocation	Allocation ID
-i, --in	Recent refs in this duration
-j, --json	(default false) pass this option to print response as json data
-p, --page	Page to get refs from
-p, --page_limit	Number of refs to return in the page

Usage: rename

Short: rename an object(file/folder) on blobbers
Long: rename an object on blobbers

LocalFlags:
-a, --allocation	Allocation ID
-d, --destname	New Name for the object (Only the name and not the path). Include the file extension if applicable
-r, --remotepath	Remote path of object to rename

Usage: reset-blobber-stats

Short: Reset blobber stats
Long: Reset blobber stats

LocalFlags:
-b, --blobber_id	blobber_id is required
-n, --new_allocated	new_allocated is required
-n, --new_saved_data	new_saved_data is required
-p, --prev_allocated	prev_allocated is required
-p, --prev_saved_data	prev_saved_data is required

Usage: rollback

Short: rollback file to previous version
Long: rollback file to previous version

LocalFlags:
-a, --allocation	Allocation ID

Usage: rp-create

Short: Create read pool if missing
Long: Create read pool in storage SC if the pool is missing.

Usage: rp-info

Short: Read pool information.
Long: Read pool information.

LocalFlags:
-j, --json	(default false) pass this option to print response as json data

Usage: rp-lock

Short: Lock some tokens in read pool.
Long: Lock some tokens in read pool.

LocalFlags:
-f, --fee	transaction fee, default 0
-t, --tokens	lock tokens number, required

Usage: rp-unlock

Short: Unlock some expired tokens in a read pool.
Long: Unlock some expired tokens in a read pool.

LocalFlags:
-f, --fee	transaction fee, default 0

Usage: sc-config

Short: Show storage SC configuration.
Long: Show storage SC configuration.

LocalFlags:
-j, --json	(default false) pass this option to print response as json data

Usage: share

Short: share files from blobbers
Long: share files from blobbers

LocalFlags:
-a, --allocation	Allocation ID
-a, --available-after	Timelock for private file that makes the file available for download at certain time. 4 input formats are supported: +1h30m, +30, 1647858200 and 2022-03-21 10:21:38. Default value is current local time.
-c, --clientid	ClientID of the user to share with. Leave blank for public share
-e, --encryptionpublickey	Encryption public key of the client you want to share with. Can be retrieved by the getwallet command
-e, --expiration-seconds	Authticket will expire when the seconds specified have elapsed after the instant of its creation
-r, --remotepath	Remote path to share
-r, --revoke	(default false) Revoke share for remotepath

Usage: shutdown-blobber

Short: deactivate a blobber
Long: deactivate a blobber, it will not be used for any new allocations

LocalFlags:
-f, --fee	fee for transaction
-i, --id	the blobber id which you want to shut down

Usage: shutdown-validator

Short: deactivate a validator
Long: deactivate a validator, it will not be used for any new challenge validations

LocalFlags:
-f, --fee	fee for transaction
-i, --id	the validator id which you want to shut down

Usage: sign-data

Short: Sign given data
Long: Sign given data

LocalFlags:
-d, --data	give data for signing, Default will be clientID

Usage: sp-info

Short: Stake pool information.
Long: Stake pool information.

LocalFlags:
-a, --authorizer_id	for given authorizer
-b, --blobber_id	for given blobber
-j, --json	(default false) pass this option to print response as json data
-m, --miner_id	for given miner
-s, --sharder_id	for given sharder
-v, --validator_id	for given validator

Usage: sp-lock

Short: Lock tokens lacking in stake pool.
Long: Lock tokens lacking in stake pool.

LocalFlags:
-a, --authorizer_id	for given authorizer
-b, --blobber_id	for given blobber
-f, --fee	transaction fee, default 0
-m, --miner_id	for given miner
-s, --sharder_id	for given sharder
-t, --tokens	tokens to lock, required
-v, --validator_id	for given validator

Usage: sp-unlock

Short: Unlock tokens in stake pool.
Long: Unlock tokens in stake pool.

LocalFlags:
-a, --authorizer_id	for given authorizer
-b, --blobber_id	for given blobber
-f, --fee	transaction fee, default 0
-m, --miner_id	for given miner
-s, --sharder_id	for given sharder
-v, --validator_id	for given validator

Usage: sp-user-info

Short: Stake pool information for a user.
Long: Stake pool information for a user.

LocalFlags:
-a, --all	(default false) pass this option to get all the pools
-c, --client_id	pass for given client
-j, --json	(default false) pass this option to print response as json data
-l, --limit	pass this option to limit the number of records returned
-o, --offset	pass this option to skip the number of rows before beginning

Usage: start-repair

Short: start repair file to blobbers
Long: start repair file to blobbers

LocalFlags:
-a, --allocation	Allocation ID
-r, --repairpath	Path to repair
-r, --rootpath	File path for local files 

Usage: stats

Short: stats for file from blobbers
Long: stats for file from blobbers

LocalFlags:
-a, --allocation	Allocation ID
-j, --json	(default false) pass this option to print response as json data
-r, --remotepath	Remote path to list from

Usage: stream

Short: capture video and audio streaming form local devices, and upload
Long: capture video and audio streaming form local devices, and upload

LocalFlags:
-a, --allocation	Allocation ID
-a, --attr-who-pays-for-reads	Who pays for reads: owner or 3rd_party
-c, --chunknumber	how many chunks should be uploaded in a http request
-d, --delay	set segment duration to seconds.
-e, --encrypt	(default false) pass this option to encrypt and upload the file
-l, --localpath	Local path of file to upload
-r, --remotepath	Remote path to upload
-t, --thumbnailpath	Local thumbnail path of file to upload

Usage: sync

Short: Sync files to/from blobbers
Long: Sync all files to/from blobbers from/to a localpath

LocalFlags:
-a, --allocation	Allocation ID
-c, --chunknumber	how many chunks should be uploaded in a http request
-e, --encryptpath	Local dir path to upload as encrypted
-e, --excludepath	Remote folder paths exclude to sync
-l, --localcache	Local cache of remote snapshot.
If file exists, this will be used for comparison with remote.
After sync complete, remote snapshot will be updated to the same file for next use.
-l, --localpath	Local dir path to sync
-r, --remotepath	Remote dir path from where it sync
-u, --uploadonly	(default false) pass this option to only upload/update the files
-v, --verifydownload	pass this option to verify downloaded blocks

Usage: transferallocation

Short: Transfer an allocation from one account to another
Long: Transfer an allocation between accounts, only current owner can transfer the allocation

LocalFlags:
-a, --allocation	allocation which is to have its ownership changed
-n, --new_owner	id of the new owner
-n, --new_owner_key	the public key of the new owner

Usage: update

Short: update file to blobbers
Long: update file to blobbers

LocalFlags:
-a, --allocation	Allocation ID
-c, --chunknumber	how many chunks should be updated in a http request
-e, --encrypt	(default false) pass this option to encrypt and update the file
-l, --localpath	Local path of file to update
-r, --remotepath	Remote path of file to update
-t, --thumbnailpath	Local thumbnail path of file to update

Usage: updateallocation

Short: Updates allocation's expiry and size
Long: Updates allocation's expiry and size

LocalFlags:
-a, --add_blobber	ID of blobber to add to the allocation
-a, --add_blobber_auth_ticket	Auth ticket of blobber to add to the allocation
-a, --allocation	Allocation ID
-e, --extend	(default false) adjust storage expiration time, duration
-f, --forbid_copy	(default false) specify if the users cannot copy object from this allocation
-f, --forbid_delete	(default false) specify if the users cannot delete objects from this allocation
-f, --forbid_move	(default false) specify if the users cannot move objects from this allocation
-f, --forbid_rename	(default false) specify if the users cannot rename objects in this allocation
-f, --forbid_update	(default false) specify if the users cannot update objects in this allocation
-f, --forbid_upload	(default false) specify if users cannot upload to this allocation
-l, --lock	lock write pool with given number of tokens, required
-n, --name	allocation name
-r, --remove_blobber	ID of blobber to remove from the allocation
-s, --set_third_party_extendable	(default false) specify if the allocation can be extended by users other than the owner
-s, --size	adjust allocation size, bytes

Usage: upload

Short: upload file to blobbers
Long: upload file to blobbers

LocalFlags:
-a, --allocation	Allocation ID
-a, --attr-who-pays-for-reads	Who pays for reads: owner or 3rd_party
-c, --chunknumber	how many chunks should be uploaded in a http request
-e, --encrypt	(default false) pass this option to encrypt and upload the file
-l, --localpath	Local path of file to upload
-m, --multiuploadjson	A JSON file containing multiupload options
-r, --remotepath	Remote path to upload
-t, --thumbnailpath	Local thumbnail path of file to upload
-w, --web-streaming	(default false) pass this option to enable web streaming support

Usage: validator-info

Short: Get validator info
Long: Get validator info

LocalFlags:
-j, --json	(default false) pass this option to print response as json data
-v, --validator_id	validator ID, required

Usage: validator-update

Short: Update validator settings by its delegate_wallet owner
Long: Update validator settings by its delegate_wallet owner

LocalFlags:
-m, --max_stake	update max_stake, optional
-m, --min_stake	update min_stake, optional
-n, --num_delegates	update num_delegates, optional
-s, --service_charge	update service_charge, optional
-v, --validator_id	validator ID, required

Usage: version

Short: Prints version information
Long: Prints version information

LocalFlags:
-j, --json	(default false) pass this option to print response as json data

Usage: wp-lock

Short: Lock some tokens in write pool.
Long: Lock some tokens in write pool.

LocalFlags:
-a, --allocation	allocation id to lock for, required
-f, --fee	transaction fee, default 0
-t, --tokens	lock tokens number, required

Usage: wp-unlock

Short: Unlock some expired tokens in a write pool.
Long: Unlock some expired tokens in a write pool.

LocalFlags:
-a, --allocation	allocation id from which to unlock tokens
-f, --fee	transaction fee, default 0

